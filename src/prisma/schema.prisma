// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// import { env } from '@prisma/client/runtime';

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  username      String    @unique
  password      String
  email         String    @unique
  role          Role      @default(USER)
  posts         Post[]
  Like          Like[]
  Comment       Comment[]
  followedBy    User[]    @relation("UserFollows", fields: [followedByIDs], references: [id])
  followedByIDs String[]  @db.ObjectId
  following     User[]    @relation("UserFollows", fields: [followingIDs], references: [id])
  followingIDs  String[]  @db.ObjectId
}

model Post {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime  @default(now())
  secure_url String
  title      String
  body       String
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String    @db.ObjectId
  likes      Like[]
  comments   Comment[]
}

model Like {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
  userId String @db.ObjectId
  postId String @db.ObjectId
}

model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  comment String
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.ObjectId
}

enum Role {
  USER
  ADMIN
}
